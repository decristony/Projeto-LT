{"version":3,"sources":["App.styles.ts","components/ListItem/styles.ts","components/ListItem/index.tsx","components/AddArea/styles.ts","components/AddArea/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","done","ListItem","item","useState","isCheked","setIsCheked","type","checked","onChange","e","target","name","AddArea","onEnter","inputText","setInputText","className","placeholder","value","onKeyUp","code","App","id","list","setList","taskName","newList","push","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEaA,EAAYC,IAAOC,IAAV,2FAMTC,EAAOF,IAAOC,IAAV,6EAMJE,EAASH,IAAOI,GAAV,4ICJNL,EAAYC,IAAOC,KAAI,gBAAGI,EAAH,EAAGA,KAAH,wTAoBbA,EAAO,eAAiB,UApBX,c,OCFvBC,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACzB,EAAgCC,mBAASD,EAAKF,MAA9C,mBAAOI,EAAP,KAAiBC,EAAjB,KAEA,OACE,eAAC,EAAD,CAAaL,KAAMI,EAAnB,UACE,uBACEE,KAAK,WACLC,QAASH,EACTI,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOH,YAExC,gCAAQL,EAAKS,WChBNjB,EAAYC,IAAOC,IAAV,mSCKTgB,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACxB,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KASA,OACE,eAAC,EAAD,WACE,qBAAKC,UAAU,QAAf,oBACA,uBACEV,KAAK,OACLW,YAAY,sBACZC,MAAOJ,EACPN,SAAU,SAACC,GAAD,OAAOM,EAAaN,EAAEC,OAAOQ,QACvCC,QAfc,SAACV,GACJ,UAAXA,EAAEW,MAAkC,KAAdN,IACxBD,EAAQC,GACRC,EAAa,YC0BJM,EAjCH,WACV,MAAwBlB,mBAAiB,CACvC,CAAEmB,GAAI,EAAGX,KAAM,mBAAoBX,MAAM,GACzC,CAAEsB,GAAI,EAAGX,KAAM,wBAAyBX,MAAM,GAC9C,CAAEsB,GAAI,EAAGX,KAAM,sCAAoCX,MAAM,GACzD,CAAEsB,GAAI,EAAGX,KAAM,mBAAoBX,MAAM,KAJ3C,mBAAOuB,EAAP,KAAaC,EAAb,KAiBA,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,+BAEA,cAAC,EAAD,CAASX,QAfO,SAACY,GACrB,IAAIC,EAAO,YAAOH,GAClBG,EAAQC,KAAK,CACXL,GAAIC,EAAKK,OAAS,EAClBjB,KAAMc,EACNzB,MAAM,IAERwB,EAAQE,MAUHH,EAAKM,KAAI,SAAC3B,EAAM4B,GAAP,OACR,cAAC,EAAD,CAAsB5B,KAAMA,GAAb4B,YClBVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c6477af.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\nbackground-color: #17181F;\ncolor:#797A81;\nmin-height:100vh;\n`;\n\nexport const Area = styled.div`\nmargin:auto;\nmax-width: 980px;\npadding: 10px;\n`;\n\nexport const Header = styled.h1`\nmargin:0;\npadding:0 ;\ncolor:#fff;\ntext-align: center;\nborder-bottom:1px solid #444;\npadding-bottom: 20px;\n`;","import styled from \"styled-components\"\n\n/*seta o done ao container props para ficar ativo a modificaçao no css\nlogo a baixo o css recebe uma function done que deterima se ele é true ou false \nsendo assim adiciona um text decoration\n*/\ntype ContainerProps = {\n  done: boolean\n}\n\nexport const Container = styled.div(({ done }: ContainerProps) => (\n  `\n  display:flex;\n  background-color: #20212C;\n  padding:10px;\n  border-radius:10px;\n  margin-bottom:10px;\n  align-items:center;\n  \n  input{\n    width:25px;\n    height:25px;\n    margin-right:5px;\n    cursor: pointer;\n    \n  }\n\n   label{\n    color:#ccc;\n   \n    text-decoration: ${done ? 'line-through' : 'initial'}\n  }\n`\n));\n","import * as C from \"./styles\";\nimport { Item } from \"../../types/item\";\nimport { useState } from \"react\";\n\ntype Props = {\n  item: Item;\n};\n\nexport const ListItem = ({ item }: Props) => {\n  const [isCheked, setIsCheked] = useState(item.done);\n\n  return (\n    <C.Container done={isCheked}>\n      <input\n        type=\"checkbox\"\n        checked={isCheked}\n        onChange={(e) => setIsCheked(e.target.checked)}\n      />\n      <label>{item.name}</label>\n    </C.Container>\n  );\n};\n","\nimport styled from \"styled-components\";\nexport const Container = styled.div`\nborder:1px solid #555;\nborder-radius:10px;\npadding:10px;\nmargin:20px 0;\ndisplay:flex;\nalign-items:center;\n\n.image{\n  margin-right:5px;\n}\n\ninput{\n  border:0;\n  background: transparent;\n  outline:0;\n  color:#fff;\n  font-size: 18px;\n  flex:1;\n}\n\n`;","import { useState, KeyboardEvent } from \"react\";\nimport * as C from \"./styles\";\n\ntype Props = {\n  onEnter: (taskName: string) => void;\n};\n\nexport const AddArea = ({ onEnter }: Props) => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    if (e.code === \"Enter\" && inputText !== \"\") {\n      onEnter(inputText);\n      setInputText(\"\");\n    }\n  };\n\n  return (\n    <C.Container>\n      <div className=\"image\">➕</div>\n      <input\n        type=\"text\"\n        placeholder=\"Adicione uma tarefa\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        onKeyUp={handleKeyUp}\n      />\n    </C.Container>\n  );\n};\n","import { useState } from \"react\";\nimport * as C from \"./App.styles\";\nimport { Item } from \"./types/item\";\nimport { ListItem } from \"./components/ListItem\";\nimport { AddArea } from \"./components/AddArea\";\n\nconst App = () => {\n  const [list, setList] = useState<Item[]>([\n    { id: 1, name: \"Criar Portifolio\", done: true },\n    { id: 2, name: \"Terminar bootcamp Dio\", done: false },\n    { id: 3, name: \"Criar Formularios com validaçoes\", done: false },\n    { id: 4, name: \"Exercitar logica\", done: true },\n  ]);\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push({\n      id: list.length + 1,\n      name: taskName,\n      done: false,\n    });\n    setList(newList);\n  };\n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header>Lista de tarefas</C.Header>\n\n        <AddArea onEnter={handleAddTask} />\n\n        {list.map((item, index) => (\n          <ListItem key={index} item={item} />\n        ))}\n      </C.Area>\n    </C.Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}